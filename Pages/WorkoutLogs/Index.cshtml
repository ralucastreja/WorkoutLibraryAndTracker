@page
@model WorkoutLibraryAndTracker.Pages.WorkoutLogs.IndexModel

@{
    ViewData["Title"] = "Workout Logs";
}

<h3>Create New Workout Log</h3>

<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            @if (Model.WorkoutLog != null && Model.WorkoutLog.Any())
            {
                <th>@Html.DisplayNameFor(m => m.WorkoutLog[0].Date)</th>
                <th>@Html.DisplayNameFor(m => m.WorkoutLog[0].Notes)</th>
                <th>@Html.DisplayNameFor(m => m.WorkoutLog[0].Workout)</th>
            }
            else
            {
                <!-- Fallback column names if the list is empty -->
                <th>Date</th>
                <th>Notes</th>
                <th>Workout</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.WorkoutLog)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    <!-- Show the Workout's Name (instead of ID) -->
                    @Html.DisplayFor(modelItem => item.Workout.Name)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.WorkoutLogId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.WorkoutLogId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.WorkoutLogId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
