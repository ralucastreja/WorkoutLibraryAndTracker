// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutLibraryAndTracker.Data;

#nullable disable

namespace WorkoutLibraryAndTracker.Migrations
{
    [DbContext(typeof(WorkoutDbContext))]
    [Migration("20250130201942_ClonedRepo")]
    partial class ClonedRepo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Intensity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.WorkoutEquipment", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("WorkoutEquipments");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.WorkoutLog", b =>
                {
                    b.Property<int>("WorkoutLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutLogId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutLogId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Workout", b =>
                {
                    b.HasOne("WorkoutLibraryAndTracker.Models.Category", "Category")
                        .WithMany("Workouts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.WorkoutEquipment", b =>
                {
                    b.HasOne("WorkoutLibraryAndTracker.Models.Equipment", "Equipment")
                        .WithMany("WorkoutEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutLibraryAndTracker.Models.Workout", "Workout")
                        .WithMany("WorkoutEquipments")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.WorkoutLog", b =>
                {
                    b.HasOne("WorkoutLibraryAndTracker.Models.Workout", "Workout")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Category", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Equipment", b =>
                {
                    b.Navigation("WorkoutEquipments");
                });

            modelBuilder.Entity("WorkoutLibraryAndTracker.Models.Workout", b =>
                {
                    b.Navigation("WorkoutEquipments");

                    b.Navigation("WorkoutLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
